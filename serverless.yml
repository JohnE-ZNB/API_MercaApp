service: mercaapp
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  stage: dev
  region: us-east-1
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  apiName: api-gateway-merca-app # Overwrite default API Gateway name. Default is ${self:provider.stage}-${self:service}
  endpointType: REGIONAL
  environment:
    DEBUG: true
    NODE_PATH: "./:/opt/node_modules"
    NODE_ENV: dev
    DB_USER: db_user_mercaapp
    DB_PASS: ZJYvNbt4C5iBGfDl
    DB_HOST: cluster0.zwdlp.mongodb.net
    DB_NAME: mercaApp_db

package:
  patterns: 
    - '!node_modules/**'

layers:
  nodejs:
    path: nodejs
    description: "Dependencias de node js"
    compatibleRuntimes:
      - nodejs14.x
      - nodejs12.x
      - nodejs10.x
    package:
      patterns: 
        - node_modules/**

functions:
  lib-mongodb:
    handler: src/lib/mongoDB.MongoLib
    name: mercaapp-lambda-lib-mongoDB
    description: Liberia que se encarga de hacer una conexion a mongo y adicional CRUD de colecciones
    timeout: 10 
    layers:
      - { Ref: NodejsLambdaLayer}
  getProducts:
    handler: src/routes/products/getProducts.getProducts
    name: mercaapp-lambda-get-products
    description: Servicio para obtener todos los productos de la app
    timeout: 10
    events:
      - http:
          method: get
          path: productos
    layers:
      - { Ref: NodejsLambdaLayer}
  getProduct:
    handler: src/routes/products/getProduct.getProduct
    name: mercaapp-lambda-get-product
    description: Servicio para obtener el detalle de un solo producto de la app
    timeout: 10
    events:
      - http:
          method: get
          path: productos/{productId}
          request:
            parameters:
              paths:
                productId: true
    layers:
      - { Ref: NodejsLambdaLayer}
  createProduct:
    handler: src/routes/products/createProduct.createProduct
    name: mercaapp-lambda-create-product
    description: Servicio para crear un solo producto en la app
    timeout: 10
    events:
      - http:
          method: post
          path: productos
    layers:
      - { Ref: NodejsLambdaLayer}
  updateProduct:
    handler: src/routes/products/updateProduct.updateProduct
    name: mercaapp-lambda-update-product
    description: Servicio para actualizar un solo producto en la app
    timeout: 10
    events:
      - http:
          method: put
          path: productos/{productId}
          request:
            parameters:
              paths:
                productId: true
    layers:
      - { Ref: NodejsLambdaLayer}
  deleteProduct:
    handler: src/routes/products/deleteProduct.deleteProduct
    name: mercaapp-lambda-delete-product
    description: Servicio para actualizar un solo producto en la app
    timeout: 10
    events:
      - http:
          method: delete
          path: productos/{productId}
          request:
            parameters:
              paths:
                productId: true
    layers:
      - { Ref: NodejsLambdaLayer}